<%
return_message = {}
return_message[:deliveries] = []
begin
    vid = params[:vid] # conversation id

    # validate vid is mandatory
    if vid.nil? || vid.empty?
        return_message[:status] = 'vid is mandatory'
        return return_message.to_json
    end

    # load the latest lead of the converastion
    d = BlackStack::Emails::Delivery.where(:id_conversation=>vid, :is_response=>true).reverse(:create_time).first
    if d.nil?
        return_message[:status] = 'conversation not found'
        return return_message.to_json
    end

    # load any unsubscribe already created
    u = BlackStack::Emails::Unsubscribe.where(:id_delivery=>d.id).first
    if u.nil?
        u = BlackStack::Emails::Unsubscribe.new
        u.id = guid
        u.id_delivery = d.id
        u.create_time = now
        u.save
    end 

    # return
    return_message[:status] = 'success'
rescue => e
    return_message[:status] = e.to_console
end
return return_message.to_json
%>